pick 33e8cc2619d2965e1e02073294228f8b9ea56116 Primeiro commit
pick 3eaf738004bb2d25d5a9e69e1e992a726bd1dc03 Adicion favicon
pick 222902e5ffacbe645426b56da6a850d3bca9296a adicionei endpointe dominio api
pick 7d2598e949dcffb3e4d73fb53ea07d7f6ac6f255 primeiro commit
pick 0b8759c9c83b3508dde2d9cd5110617fc9aed994 Update README.md
pick 3c11d9a8cc5aa9864a353f4cc0cf4f6abc002fa7 primeiro commit
pick 0bc24a81b90b6f80ddf4fb27cc1b383b0b1c2bfb primeiro  commit

# Rebase 0639df9..0bc24a8 onto 0639df9 (7 commands)
#
# Commands:
# p, pick <commit> = use commit
# r, reword <commit> = use commit, but edit the commit message
# e, edit <commit> = use commit, but stop for amending
# s, squash <commit> = use commit, but meld into previous commit
# f, fixup [-C | -c] <commit> = like "squash" but keep only the previous
#                    commit's log message, unless -C is used, in which case
#                    keep only this commit's message; -c is same as -C but
#                    opens the editor
# x, exec <command> = run command (the rest of the line) using shell
# b, break = stop here (continue rebase later with 'git rebase --continue')
# d, drop <commit> = remove commit
# l, label <label> = label current HEAD with a name
# t, reset <label> = reset HEAD to a label
# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]
# .       create a merge commit using the original merge commit's
# .       message (or the oneline, if no original merge commit was
# .       specified); use -c <commit> to reword the commit message
#
# These lines can be re-ordered; they are executed from top to bottom.
#
# If you remove a line here THAT COMMIT WILL BE LOST.
#
# However, if you remove everything, the rebase will be aborted.
#
